server:
  port: 18080
spring:
  application:
    name: service-gateway
  profiles:
    active: '@profiles.active@'
  cloud:
    nacos:
      discovery:
        server-addr: '@nacos.address@'
        namespace: nacos-example
        group: ${spring.profiles.active}
    gateway:
      discovery:
        locator:
          # 开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务
          enabled: true
          # 服务名配置为小写
          lower-case-service-id: true
      routes:
      # Add your routes here.
        - id: api_provider
          uri: lb://service-provider
          predicates:
            - Path=/provider/**
          filters:
            #- SwaggerHeaderFilter
            - StripPrefix=1
        - id: api_consumer
          uri: lb://service-consumer
          predicates:
            - Path=/consumer/**
          filters:
            #- SwaggerHeaderFilter
            - StripPrefix=1
            - name: RequestRateLimiter
              args:
                denyEmptyKey: false
                emptyKeyStatus: SERVICE_UNAVAILABLE
                keyResolver: '#{@ipAddressKeyResolver}'
                redis-rate-limiter:
                  # 令牌桶的填充速率，允许用户每秒执行多少请求
                  replenishRate: 1
                  # 令牌桶的容量，允许用户在一秒钟内执行的最大请求数
                  burstCapacity: 2

management.endpoints.web.exposure.include: "*"